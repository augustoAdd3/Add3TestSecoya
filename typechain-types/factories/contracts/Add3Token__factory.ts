/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Add3Token, Add3TokenInterface } from "../../contracts/Add3Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013bb380380620013bb83398101604081905262000034916200034a565b8251839083906200004d906003906020850190620001d7565b50805162000063906004906020840190620001d7565b505050620000806200007a620000bb60201b60201c565b620000bf565b6005805460ff60a01b19169055620000b233620000a06012600a620004d2565b620000ac9084620004ea565b62000111565b50505062000564565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200016c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200018091906200050c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001e59062000527565b90600052602060002090601f01602090048101928262000209576000855562000254565b82601f106200022457805160ff191683800117855562000254565b8280016001018555821562000254579182015b828111156200025457825182559160200191906001019062000237565b506200026292915062000266565b5090565b5b8082111562000262576000815560010162000267565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a557600080fd5b81516001600160401b0380821115620002c257620002c26200027d565b604051601f8301601f19908116603f01168101908282118183101715620002ed57620002ed6200027d565b816040528381526020925086838588010111156200030a57600080fd5b600091505b838210156200032e57858201830151818301840152908201906200030f565b83821115620003405760008385830101525b9695505050505050565b6000806000606084860312156200036057600080fd5b83516001600160401b03808211156200037857600080fd5b620003868783880162000293565b945060208601519150808211156200039d57600080fd5b50620003ac8682870162000293565b925050604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000414578160001904821115620003f857620003f8620003bd565b808516156200040657918102915b93841c9390800290620003d8565b509250929050565b6000826200042d57506001620004cc565b816200043c57506000620004cc565b8160018114620004555760028114620004605762000480565b6001915050620004cc565b60ff841115620004745762000474620003bd565b50506001821b620004cc565b5060208310610133831016604e8410600b8410161715620004a5575081810a620004cc565b620004b18383620003d3565b8060001904821115620004c857620004c8620003bd565b0290505b92915050565b6000620004e360ff8416836200041c565b9392505050565b6000816000190483118215151615620005075762000507620003bd565b500290565b60008219821115620005225762000522620003bd565b500190565b600181811c908216806200053c57607f821691505b602082108114156200055e57634e487b7160e01b600052602260045260246000fd5b50919050565b610e4780620005746000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635c975abb116100ad57806395d89b411161007157806395d89b4114610244578063a457c2d71461024c578063a9059cbb1461025f578063dd62ed3e14610272578063f2fde38b1461028557600080fd5b80635c975abb146101de57806370a08231146101f0578063715018a6146102195780638456cb59146102215780638da5cb5b1461022957600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b5780633f4ba83a146101ae57806340c10f19146101b857806342966c68146101cb57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e610298565b60405161013b9190610c72565b60405180910390f35b610157610152366004610ce3565b61032a565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610d0d565b610342565b6040516012815260200161013b565b6101576101a9366004610ce3565b61035f565b6101b6610381565b005b6101b66101c6366004610ce3565b610393565b6101b66101d9366004610d49565b6103b1565b600554600160a01b900460ff16610157565b61016b6101fe366004610d62565b6001600160a01b031660009081526020819052604090205490565b6101b66103c6565b6101b66103d8565b6005546040516001600160a01b03909116815260200161013b565b61012e6103e8565b61015761025a366004610ce3565b6103f7565b61015761026d366004610ce3565b610482565b61016b610280366004610d7d565b61049d565b6101b6610293366004610d62565b6104c8565b6060600380546102a790610db0565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610db0565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b60003361033881858561053e565b5060019392505050565b600061034c610663565b6103578484846106b0565b949350505050565b600033610338818585610372838361049d565b61037c9190610deb565b61053e565b6103896106c9565b610391610723565b565b61039b6106c9565b6103a3610663565b6103ad8282610778565b5050565b6103b9610663565b6103c33382610837565b50565b6103ce6106c9565b6103916000610961565b6103e06106c9565b6103916109b3565b6060600480546102a790610db0565b60003381610405828661049d565b90508381101561046a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610477828686840361053e565b506001949350505050565b600061048c610663565b61049683836109f6565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104d06106c9565b6001600160a01b0381166105355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610461565b6103c381610961565b6001600160a01b0383166105a05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610461565b6001600160a01b0382166106015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610461565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600554600160a01b900460ff16156103915760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610461565b6000336106be858285610a04565b610477858585610a7e565b6005546001600160a01b031633146103915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610461565b61072b610c22565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166107ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610461565b80600260008282546107e09190610deb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108975760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610461565b6001600160a01b0382166000908152602081905260409020548181101561090b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610461565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610656565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109bb610663565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861075b3390565b600033610338818585610a7e565b6000610a10848461049d565b90506000198114610a785781811015610a6b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610461565b610a78848484840361053e565b50505050565b6001600160a01b038316610ae25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610461565b6001600160a01b038216610b445760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610461565b6001600160a01b03831660009081526020819052604090205481811015610bbc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610461565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a78565b600554600160a01b900460ff166103915760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610461565b600060208083528351808285015260005b81811015610c9f57858101830151858201604001528201610c83565b81811115610cb1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610cde57600080fd5b919050565b60008060408385031215610cf657600080fd5b610cff83610cc7565b946020939093013593505050565b600080600060608486031215610d2257600080fd5b610d2b84610cc7565b9250610d3960208501610cc7565b9150604084013590509250925092565b600060208284031215610d5b57600080fd5b5035919050565b600060208284031215610d7457600080fd5b61049682610cc7565b60008060408385031215610d9057600080fd5b610d9983610cc7565b9150610da760208401610cc7565b90509250929050565b600181811c90821680610dc457607f821691505b60208210811415610de557634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610e0c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207a893c8d8b9eb53ad7142e7104f05ce9bd79eb80ed04bc375eeb82f2a55a33e464736f6c63430008090033";

type Add3TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Add3TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Add3Token__factory extends ContractFactory {
  constructor(...args: Add3TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<
      Add3Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Add3Token__factory {
    return super.connect(runner) as Add3Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Add3TokenInterface {
    return new Interface(_abi) as Add3TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Add3Token {
    return new Contract(address, _abi, runner) as unknown as Add3Token;
  }
}
