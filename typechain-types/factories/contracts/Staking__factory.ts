/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "unstakeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "UnStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "dynamicStaking",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "autoCompound",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "rewardRate",
        type: "uint64",
      },
    ],
    name: "__Staking_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_autoCompoundEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "_claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_dynamicStakingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_rewardRate",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "adminWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStakingInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakingInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "rewardRate",
        type: "uint64",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611d7f61004c6000396000818161051901528181610559015281816105f90152818161063901526106cc0152611d7f6000f3fe6080604052600436106101145760003560e01c80637b0472f0116100a0578063c66b5d3911610064578063c66b5d3914610320578063d110a22514610341578063eb08ab2814610361578063f19550a61461037f578063f2fde38b1461039f57600080fd5b80637b0472f0146102755780637c5b4a371461029557806380933608146102b55780638da5cb5b146102e2578063c34902631461030057600080fd5b80634f1ef286116100e75780634f1ef286146101c957806352d1902d146101dc57806368fd25cd146101ff578063715018a61461024057806372470a9a1461025557600080fd5b80632421a9f2146101195780632c4c520c146101565780632e17de78146101875780633659cfe6146101a9575b600080fd5b34801561012557600080fd5b5060c954610139906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016257600080fd5b5060ca5461017790600160c81b900460ff1681565b604051901515815260200161014d565b34801561019357600080fd5b506101a76101a2366004611839565b6103bf565b005b3480156101b557600080fd5b506101a76101c436600461186e565b61050e565b6101a76101d736600461189f565b6105ee565b3480156101e857600080fd5b506101f16106bf565b60405190815260200161014d565b34801561020b57600080fd5b5060ca5461022790600160801b900467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161014d565b34801561024c57600080fd5b506101a7610772565b34801561026157600080fd5b506101f1610270366004611961565b610786565b34801561028157600080fd5b506101a761029036600461198d565b61080f565b3480156102a157600080fd5b506101a76102b0366004611839565b61086a565b3480156102c157600080fd5b506102d56102d036600461186e565b610889565b60405161014d91906119af565b3480156102ee57600080fd5b506097546001600160a01b0316610139565b34801561030c57600080fd5b506101a761031b36600461198d565b610926565b34801561032c57600080fd5b5060ca5461017790600160c01b900460ff1681565b34801561034d57600080fd5b506101a761035c366004611a39565b610a72565b34801561036d57600080fd5b5060ca546001600160801b03166101f1565b34801561038b57600080fd5b506101a761039a366004611a91565b610bf3565b3480156103ab57600080fd5b506101a76103ba36600461186e565b610c29565b33600090815260cb60205260408120805483929190839081106103e4576103e4611aac565b906000526020600020906004020160010154116104355760405162461bcd60e51b815260206004820152600a602482015269125b9d985b1a59081a5960b21b60448201526064015b60405180910390fd5b60ca548290600160c01b900460ff166105005733600090815260cb6020526040812080548390811061046957610469611aac565b9060005260206000209060040201600301549050600060cb600061048a3390565b6001600160a01b03166001600160a01b0316815260200190815260200160002083815481106104bb576104bb611aac565b6000918252602082206002600490920201015491506104da8342611ad8565b9050818110156104fc5760405162461bcd60e51b815260040161042c90611aef565b5050505b61050983610c9f565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105575760405162461bcd60e51b815260040161042c90611b37565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105a0600080516020611d03833981519152546001600160a01b031690565b6001600160a01b0316146105c65760405162461bcd60e51b815260040161042c90611b83565b6105cf81610e0e565b604080516000808252602082019092526105eb91839190610e16565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106375760405162461bcd60e51b815260040161042c90611b37565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610680600080516020611d03833981519152546001600160a01b031690565b6001600160a01b0316146106a65760405162461bcd60e51b815260040161042c90611b83565b6106af82610e0e565b6106bb82826001610e16565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461075f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161042c565b50600080516020611d0383398151915290565b61077a610f90565b6107846000610fea565b565b6001600160a01b038116600090815260cb602052604081208054829190859081106107b3576107b3611aac565b9060005260206000209060040201905060008160030154426107d59190611ad8565b60ca54909150610806906107fb908390600160801b900467ffffffffffffffff1661103c565b60018401549061104f565b95945050505050565b81600081116108605760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161042c565b610509838361105b565b610872610f90565b60c9546105eb906001600160a01b0316338361114d565b6001600160a01b038116600090815260cb60209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561091b5783829060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050815260200190600101906108c1565b505050509050919050565b33600090815260cb602052604081208054849291908390811061094b5761094b611aac565b906000526020600020906004020160010154116109975760405162461bcd60e51b815260206004820152600a602482015269125b9d985b1a59081a5960b21b604482015260640161042c565b60ca548390600160c01b900460ff16610a625733600090815260cb602052604081208054839081106109cb576109cb611aac565b9060005260206000209060040201600301549050600060cb60006109ec3390565b6001600160a01b03166001600160a01b031681526020019081526020016000208381548110610a1d57610a1d611aac565b600091825260208220600260049092020101549150610a3c8342611ad8565b905081811015610a5e5760405162461bcd60e51b815260040161042c90611aef565b5050505b610a6c84846111b0565b50505050565b600054610100900460ff1615808015610a925750600054600160ff909116105b80610aac5750303b158015610aac575060005460ff166001145b610b0f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042c565b6000805460ff191660011790558015610b32576000805461ff0019166101001790555b60ca805460c980546001600160a01b0319166001600160a01b03891617905561ffff60c01b1916600160c01b8615150260ff60c81b191617600160c81b851515021767ffffffffffffffff60801b1916600160801b67ffffffffffffffff851602179055610b9e61137b565b610ba66113aa565b8015610bec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610bfb610f90565b60ca805467ffffffffffffffff909216600160801b0267ffffffffffffffff60801b19909216919091179055565b610c31610f90565b6001600160a01b038116610c965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b6105eb81610fea565b33600090815260cb60205260408120805483908110610cc057610cc0611aac565b906000526020600020906004020190506000610cdc8333610786565b33600090815260cb6020526040902080549192509084908110610d0157610d01611aac565b60009182526020822060049182020182815560018101839055600281018390556003019190915560c95460405163a9059cbb60e01b81523392810192909252602482018390526001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dac9190611bcf565b50600182015460028301546003840154604080519384526020840192909252908201524260608201528190849033907fd6fff86b607756024160e636604ed9ed69268b5af4c4993928bf8075d12fbe78906080015b60405180910390a4505050565b6105eb610f90565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e4957610509836113d1565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e8257600080fd5b505afa925050508015610eb2575060408051601f3d908101601f19168201909252610eaf91810190611bec565b60015b610f155760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161042c565b600080516020611d038339815191528114610f845760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161042c565b5061050983838361146d565b6097546001600160a01b031633146107845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006110488284611c05565b9392505050565b60006110488284611c24565b60ca5460c9546001600160801b0390911690611082906001600160a01b0316333086611492565b33600081815260cb6020908152604080832081516080810183528681528084018981528184018981524260608401818152855460018082018855968a529888902094516004909902909401978855915187850155516002870155905160039095019490945560ca80546fffffffffffffffffffffffffffffffff1981166001600160801b039182169093011691909117905580519283529082018590528592849290917f2720efa4b2dd4f3f8a347da3cbd290a522e9432da9072c5b8e6300496fdde2829101610e01565b6040516001600160a01b03831660248201526044810182905261050990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114ca565b33600090815260cb602052604081208054849081106111d1576111d1611aac565b9060005260206000209060040201905060006111ed8433610786565b6001830154600284015460038501549293509091838611156112635760405162461bcd60e51b815260206004820152602960248201527f436c61696d20616d6f756e7420657863656564732074686520636c61696d61626044820152681b1948185b5bdd5b9d60ba1b606482015260840161042c565b838610801561127b575060ca54600160c81b900460ff165b1561129a57600061128c8786611ad8565b9050611298818461105b565b505b33600090815260cb602052604090208054889081106112bb576112bb611aac565b60009182526020822060049091020181815560018101829055600281018290556003015560ca5460ff600160c81b909104161561130e5760c954611309906001600160a01b0316338861114d565b611325565b60c954611325906001600160a01b0316338661114d565b60408051848152602081018490529081018290524260608201528490889033907f2a224adb01cb29adec3dcfa8050f75c9a6a192759a9f8a75885d3f8e4814adbd9060800160405180910390a450505050505050565b600054610100900460ff166113a25760405162461bcd60e51b815260040161042c90611c3c565b61078461159f565b600054610100900460ff166107845760405162461bcd60e51b815260040161042c90611c3c565b6001600160a01b0381163b61143e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161042c565b600080516020611d0383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611476836115cf565b6000825111806114835750805b1561050957610a6c838361160f565b6040516001600160a01b0380851660248301528316604482015260648101829052610a6c9085906323b872dd60e01b90608401611179565b600061151f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116349092919063ffffffff16565b90508051600014806115405750808060200190518101906115409190611bcf565b6105095760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161042c565b600054610100900460ff166115c65760405162461bcd60e51b815260040161042c90611c3c565b61078433610fea565b6115d8816113d1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606110488383604051806060016040528060278152602001611d236027913961164b565b606061164384846000856116c3565b949350505050565b6060600080856001600160a01b0316856040516116689190611cb3565b600060405180830381855af49150503d80600081146116a3576040519150601f19603f3d011682016040523d82523d6000602084013e6116a8565b606091505b50915091506116b98683838761179e565b9695505050505050565b6060824710156117245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161042c565b600080866001600160a01b031685876040516117409190611cb3565b60006040518083038185875af1925050503d806000811461177d576040519150601f19603f3d011682016040523d82523d6000602084013e611782565b606091505b50915091506117938783838761179e565b979650505050505050565b6060831561180a578251611803576001600160a01b0385163b6118035760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161042c565b5081611643565b611643838381511561181f5781518083602001fd5b8060405162461bcd60e51b815260040161042c9190611ccf565b60006020828403121561184b57600080fd5b5035919050565b80356001600160a01b038116811461186957600080fd5b919050565b60006020828403121561188057600080fd5b61104882611852565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156118b257600080fd5b6118bb83611852565b9150602083013567ffffffffffffffff808211156118d857600080fd5b818501915085601f8301126118ec57600080fd5b8135818111156118fe576118fe611889565b604051601f8201601f19908116603f0116810190838211818310171561192657611926611889565b8160405282815288602084870101111561193f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561197457600080fd5b8235915061198460208401611852565b90509250929050565b600080604083850312156119a057600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611a06578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016119cc565b5091979650505050505050565b80151581146105eb57600080fd5b803567ffffffffffffffff8116811461186957600080fd5b60008060008060808587031215611a4f57600080fd5b611a5885611852565b93506020850135611a6881611a13565b92506040850135611a7881611a13565b9150611a8660608601611a21565b905092959194509250565b600060208284031215611aa357600080fd5b61104882611a21565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611aea57611aea611ac2565b500390565b60208082526028908201527f5468652063757272656e74207374616b696e6720706572696f6420686173206e6040820152671bdd08195b99195960c21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611be157600080fd5b815161104881611a13565b600060208284031215611bfe57600080fd5b5051919050565b6000816000190483118215151615611c1f57611c1f611ac2565b500290565b60008219821115611c3757611c37611ac2565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015611ca2578181015183820152602001611c8a565b83811115610a6c5750506000910152565b60008251611cc5818460208701611c87565b9190910192915050565b6020815260008251806020840152611cee816040850160208701611c87565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202c72f37af55c2a366b975df672917535621085b9929b35822cfb5080b3ab47e264736f6c63430008090033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
